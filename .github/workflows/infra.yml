name: Validate WalterBackend Infrastructure

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

permissions:
  contents: read
  pull-requests: write

env:
  TF_VERSION: '1.13.0'
  AWS_DEFAULT_REGION: ${{ vars.AWS_REGION || 'us-east-1' }}

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: terraform/

    steps:
      - name: 'Checkout'
        uses: actions/checkout@v4

      - name: 'Configure AWS Credentials'
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_DEFAULT_REGION }}

      - name: 'Setup Terraform'
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: 'Terraform Format'
        id: fmt
        run: terraform fmt -check -recursive -diff
        continue-on-error: true

      - name: 'Terraform Init'
        id: init
        run: terraform init

      - name: 'Terraform Plan'
        id: plan
        run: |
          terraform plan -var="domain=dev" -no-color -out=tfplan
        continue-on-error: true

      - name: 'Comment PR'
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          script: |
            const output = `## Terraform Results
            
            | Check | Status |
            |-------|--------|
            | Format | ${{ steps.fmt.outcome == 'success' ? '‚úÖ' : '‚ùå' }} |
            | Init | ${{ steps.init.outcome == 'success' ? '‚úÖ' : '‚ùå' }} |
            | Plan | ${{ steps.plan.outcome == 'success' ? '‚úÖ' : '‚ùå' }} |
            
            ### üîó Links
            - [Walter Backend Canaries Dashboard](https://us5.datadoghq.com/dashboard/ncn-c5j-vh8/walterbackend-canaries)
            - [Walter Frontend Repository](https://github.com/jwallace145/walter-frontend-v2)`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: output
            });

      - name: 'Fail if any step failed'
        if: |
          steps.fmt.outcome == 'failure' ||
          steps.init.outcome == 'failure' ||
          steps.plan.outcome == 'failure'
        run: exit 1